name: GitHub Workflows
env:
  AWS_REGION: ${{ secrets.NETFLOP_AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.NETFLOP_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_KEY: ${{ secrets.NETFLOP_AWS_SECRET_KEY }}
  ENVIRONMENT: ${{ github.base_ref == 'master' && 'prod' || 'dev' }}
  GITHUB_TOKEN: ${{ secrets.TH_GITHUB_TOKEN }}
  REVIEWERS: ("thanghuynh2608" "cuongvu209" "truongyennguyen" "yoralong")
  PR_OWNER: "${{ github.actor }}"
on:
  push:
    branches:
      - 'develop'
      - 'master'
      - 'manual'
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize
      - closed
  workflow_dispatch:
jobs:
  add-reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v4

      - name: Auto add reviewer
        run: |
          # Remove the owner from the reviewers list
          for i in "${!REVIEWERS[@]}"; do
          if [ "${REVIEWERS[$i]}" = "$PR_OWNER" ]; then
            unset REVIEWERS[$i]
          fi
          done

          # Build payload
          JSON_PAYLOAD="{\"reviewers\":[\"${REVIEWERS[@]}\"]}"

          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/pulls/$GITHUB_PR_NUMBER/requested_reviewers" \
            -d $JSON_PAYLOAD

          echo "Added reviewers $PAYLOAD to pull request $GITHUB_PR_NUMBER"


  deploy-app:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v4

#      - name: Cache dependencies # To cache -> reduce dependencies restore and build time. Investigating
#        uses: actions/cache@v3

      - name: Check ENV variable
        run: echo $AWS_REGION, $ENVIRONMENT

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install awscli

      - name: AWS Configuration
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_KEY
          aws configure set default.region $AWS_REGION

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: 17
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install CDK
        run: |
          npm install -g aws-cdk

      - name: Synth, Bootstrap and Deploy app
        run: |
          cd infrastructure
          cdk synth -c env=$ENVIRONMENT
          cdk bootstrap -c env=$ENVIRONMENT
          cdk deploy -c env=$ENVIRONMENT --require-approval never

#       PUBLISH & UPLOAD ARTIFACT
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: dist-file
#          path: dist

#      - name: Get Artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: dist-file
